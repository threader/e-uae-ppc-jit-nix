E-UAE PowerPC JIT project 0.8.29-PPCJITBETA04
=============================================

This project is a fork of the E-UAE Amiga emulation project. You can find the
original project's pages here:

http://www.rcdrummond.net/uae

Please also read the details of the original project in the included
README_original file.

The goal of the project is implementing Just-In-Time compiling for PowerPC
processors, using (some of) the already available intel x86 implementation.

For further details please have a look on the project blog:

http://euaejit.blogspot.com


You can find the actual project sources in the SourceForge project:

https://sourceforge.net/projects/euaeppcjit


If you would like to support the project then please consider a small donation:

http://amigabounty.net/index.php?function=viewproject&projectid=35

Thank you!


Beta release #4 (PPCJITBETA04)
===================================
The most important features of the fourth beta version are:

 * Lots of bug fixes improve the overall stability of the emulation.
 
 * All SAM440EP/Flex-related issues are sorted out (hopefully).

You can get an idea of the remaining work by looking at the tickets:

https://sourceforge.net/p/euaeppcjit/tickets

Please read the How to test and the Known issues sections carefully before
you start using the release.

You can also find a comparison of the original E-UAE v0.8.29 and this version
in the What is the difference section.

Please note: the tools for the emulator are not included in this beta package.
If you need these tools (for example: mousehack, make-hdf, rtg.library, etc.)
then please use them from a previous E-UAE release.
This emulator is backward compatible with the original v0.8.29, you can use
the same tools or even the same configuration files with some JIT compiling-
related changes.


Files in this package
=====================
You can find the following directories and files in the package:

  docs       - documentation from the original E-UAE sources with adjustments
  COPYING    - license document
  README     - this file what you are reading now
  README_original - original README file that came with v0.8.29
  uae        - Generic E-UAE executable compiled for running in an Amiga window


What is the difference
======================
Here are the differences between the original v0.8.29 and this version:

* Some minor fixes were applied on certain files when it was necessary.

* The x86 JIT compiling were removed completely.

* The PowerPC JIT compiling were implemented from scratch, some support 
  functions were reused from the x86 implementation.
  
* New configuration items are available for the new JIT implementation.
  (See docs/configuration.txt.)
  
* CyberGraphX overlay screen support (for MorphOS only at the moment)
  
* Some configuration items for JIT were removed.
  (See docs/configuration.txt.)

* An indicator LED were introduced for the JIT compiler state.
  (See docs/configuration.txt.)

* Collected the various fixes from different individual forked releases of the
  original E-UAE versions.

* G5 (PowerPC 970/FX/GX/MP) support.
  
All other aspects of the emulation remained the same as it was available
already in E-UAE v0.8.29 (as of 20/08/2008).


Changes since the previous release (JITPPCBETA03)
=================================================

New/Changed:
------------
* Removed machine type check on AmigaOS4 when timebase register is read.
 (Ticket #32)

* Reverted all SAM440EP/Flex-related changes for Picasso96 native modes.
 (Ticket #42)

* Turn on comp_optimize setting by default. It seems to be stable enough by
  now.

* Added hotkeys for state saving and function for switching to full screen for
  the AmigaOS target. (Thanks to MickJT for the patch.)

* Re-added floppy drive sound emulation. (Thanks to MickJT for the patch and
  Ole for the original source changes for the PS3 port.)

* Removed some unused configuration items:
    comp_fpu - FPU emulation won't be configurable separately
    comp_oldsegv - meaning less for PowerPC JIT
    comp_trustnaddr - unused setting for native memory address
    compforcesettings - weird, useless setting for native memory access support

* Added version tag for AmigaOS version command. (Ticket #46)

* Set cache flush mode to hard flush by default. Safer option than soft flush,
  although this setting has no effect on the JIT compiling at the moment.

* Added missing configuration to the documentation (comp_flushmode), removed
  documentation for removed configuration (comp_fpu). (Ticket #4)

* Changed documentation for comp_optimize to reflect the current default
  setting change.

Improved:
---------

* Compiled code is removed from code cache when the block is not used
 (compiling runs out of space in macroblock buffer or the block consists
  of unsupported instructions only).

* Macroblock buffer is allocated only when the JIT is enabled, size will be a
  tiny bit smaller due to changed field order in the macroblock base structure.

Fixed:
------

* Reverted back change for the SDL sound buffer enlarging which was merged
  from Soft3's special SAM440EP/Flex version.
  (Thanks to MickJT to follow it up with Max.)

* Increased the size of the macroblock buffer: as it seems it was too low for
  some programs which have unrolled processing loops, like AMPlifier and many
  chunky-to-planar coverters. (Ticket #40 and #49)
  The assumed 20 macroblocks per 68k instruction might be an overkill for most
  cases, but the size of the buffer in memory is still acceptable.

* Avoid sign-extension of lower longword part of the 64 bit number in 64 bit
  division instructions. (Ticket #39)

* Fixed processor flag handling for PPC 970.
 (Ticket #43 - Thanks to Tobias Netzel.)

* Added detection of register overlapping into MULU/MULS.L Dx,Dy:Dz
  instructions. (Ticket #39)

* Added missing dependency on shift register into ASL/ASR.L Dx,Dy.
 (Ticket #41)

* Fixed dependency on input data in SCC instructions. (Ticket #45 and #47)

* Fixed wrong number of steps when extracting V flag for ASL instructions.
 (Ticket #44)

* Fixed wrong rotation source for ROXL.W mem instruction. (Ticket #38)

* JIT compiling and compiled block execution is suspended while the TRACE
  processor flag is active. (Ticket #29)


How to test
===========
First of all: please read the available configuration items in the
docs/configuration.txt file, especially regarding the JIT compiling
configuration.

You can reuse the same configuration files, HD image files, prepared folders
that were already working with the previous E-UAE version.

However, for testing the JIT implementation please make sure you set up
the configuration exactly as listed below:
    cpu_speed=max
    cpu_type=68020 (or 68EC020, 68040, see Known issues)
    cpu_compatible=false
    cpu_cycle_exact=false
    blitter_cycle_exact=false
    comp_optimize=true
    cachesize=8192 (or higher)
    comp_constjump=yes
    comp_trustbyte=indirect (see Known issues)
    comp_trustword=indirect
    comp_trustlong=indirect

These settings will make sure you get the best performance from the JIT
compiled code and workaround the known issues.

Please have a look at the docs/configuration.txt file for the details of
these settings.

Regarding the processor settings please note: the JIT implementation is
depending on the availability of the processor cache, any software that turns
the cache off won't be JIT compiled.
Same applies to the processor type: those processors which don't have cache
cannot be used together with the JIT compiling (these are: 68000, 68010).

In case you are not sure whether the JIT compiling works or not with your
configuration: turn on the JIT LED. (See show_leds in docs/configuration.txt.)
If the JIT was set up properly then the JIT LED will blink green on the screen.

For G5 (PowerPC 970/FX/GX/MP) users:
(Applicable to MacOSX only at the moment.)
Please use the binary from the archive which is tagged with "G5": E-UAE_G5.
The generic build is running on G5, but it is much slower due to missing
instructions which are emulated by the operating system.

For MorphOS G5 (PowerPC 970/FX/GX/MP) users:
G5 processor is not supported in this beta release. Currently the PPC970 target
is not supported by the official SDK, as soon as this situation is improved
I will release a special build for G5 processors.
The current build will not perform well on G5 due to the missing instructions
on the G5 architecture.


How to report a bug
===================
When you think you have found a bug and would like to report it please make
sure you follow these steps:

1. Check whether the bug was already known. You can find the bug tickets on
   the SourceForge project page: https://sourceforge.net/p/euaeppcjit/tickets

2. Make sure you are using the most recent version of the emulator.
   Check the SourceForge page for any updates:
   https://sourceforge.net/p/euaeppcjit

   You can check the version of your emulator when you start it from command
   line, this will be the very first output from the program.

   On AmigaOS(-like) systems you can also use the standard version command to
   get the version of the uae executable.

   The version number includes a tag for the beta releases, for example:
   0.8.29-PPCJITBETA04

3. Make sure the JIT compiling is running, read through the How to test
   section and follow the instructions regarding the configuration.

4. Try to reproduce the bug without optimization: turn off the optimization
   in the configuration and try to reproduce the bug. (comp_optimize=false)

5. Try to reproduce the bug without JIT compiling: turn off the JIT compiling
   in the configuration and try to reproduce the bug. (cachesize=0)

6. If you were able to reproduce the bug without JIT compiling then try to
   reproduce it on the previous version of E-UAE.
   If you are able to reproduce it then it is a generic E-UAE bug. Fixing
   these issues is not a goal for the E-UAE PPC JIT project. You might still
   report it, but most likely it won't be fixed in this project.

7. If you think you had found a bug related to the JIT compiling then try to
   make sure you can reproduce the bug consistently (or often enough) and
   please describe the exact details, provide the software that triggers the
   problem.

8. See the Contacts section for getting in touch with me. Gather all the
   information and send it to me by email.


Known issues
============
* The following instructions are planned, but not implemented yet for the
  JIT compiling at the moment:

  - (Ticket #8) compare against bounds instructions (CMP2);

  - (Ticket #10) the FPU instructions were not implemented yet, these are coming
    at a later stage of the project.

  Even though these instructions are not compiled, a fall-back mechanism kicks
  in and these will be executed by the interpretive emulation.
  Any software that is relying on these instructions will be still working.

* This is a debug version, so probably it is a little bit slower than the 
  release version will be (including the non-JIT code).
  
* (Ticket #11) E-UAE does not support 68030 processor type, if this processor
  was selected then it falls back to 68010.

* (Ticket #3) A bug in the original E-UAE code prevents enabling of the
  processor cache when the processor type is set to 68060. (In this case the
  JIT compiling won't be enabled.)

* (Ticket #12) As it is stated in the original configuration documentation:
  the 68060 emulation is incomplete, therefore it is not useful yet.

* (Ticket #15) The direct memory access is not completed yet, theoretically it
  might work for certain software, but I suggest to turn it off by adding these
  lines to the configuration: 
    comp_trustbyte=indirect
    comp_trustword=indirect
    comp_trustlong=indirect

* (Ticket#19) On-screen LEDs are not visible on the Picasso96 RTG screens,
  so the JIT LED indicator is not useful on these screen modes.


Where to get the sources
========================
You can find the current project sources at the SourceForge project pages:

https://sourceforge.net/projects/euaeppcjit


Notes for compiling the sources
===============================
For general notes for compiling please refer to the README_original file.

To compile on Mac OSX 10.3.9 or earlier:

Autoconf2.57 and automake1.6 mess up @OBJCFLAGS@ and is not really compatible. 

Get the correct versions - replacing the previous version :
http://ftp.gnu.org/gnu/autoconf/autoconf-2.61.tar.bz2
./configure --bindir=/usr/bin --datarootdir=/usr/share && make install
http://ftp.gnu.org/gnu/automake/automake-1.7.9.tar.bz2
./configure --bindir=/usr/bin --datadir=/usr/share && make install

For Mac OSX 10.4.x and 10.3.x: 
Latest SDL.framework is not properly detected. 
Using the SDL.framework already in E-UAE.app/Content/Frameworks at
http://www.rcdrummond.net/uae
Copy SDL.framework/Headers from the latest SDL.framework and put the framework
in /Library/Frameworks/
./configure --enable-jit --without-x --with-sdl-gl --with-cocoa-gui

Source installed SDL is also detected.

For AmigaOS4:
You need to link libamiga to the binary otherwise the TimeDelay macro won't
work. To do so add this parameter to the configure script:
./configure LIBS=-lamiga


Contact
=======
Send any opinion, bug reports, patches, etc. to
Almos Rajnai (almos dot rajnai at GMail)

You can also get in touch with me using the Contact form at the project blog:
http://euaejit.blogspot.com


Special thanks
==============
I would like to thank the constant support to

  Thunder, kas1e, MickJT, Fab, Luigi,
  Tobias Netzel, Mike Blackburn and Chris Handley

for helping me with lots of things regarding bug finding, fixing,
platform support and constantly watching out for the updates on the repository.

